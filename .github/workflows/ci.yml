name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, 'feature/*', 'release/*' ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * 1'  # Weekly on Monday

env:
  NODE_VERSION: '18.x'
  CACHE_KEY: node-deps-${{ hashFiles('**/package-lock.json') }}

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}
          restore-keys: node-deps-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check types
        run: npx tsc --noEmit
      
      - name: Lint
        run: npm run lint
      
      - name: Run unit tests
        run: npm test -- --coverage --watchAll=false
      
      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/
          retention-days: 14

  build:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/
          retention-days: 14
      
      - name: Generate build info
        if: github.ref == 'refs/heads/main'
        run: |
          echo "{
            \"version\": \"1.0.0\",
            \"buildDate\": \"$(date -u +'%Y-%m-%d %H:%M:%S')\",
            \"commit\": \"${{ github.sha }}\",
            \"branch\": \"${{ github.ref_name }}\",
            \"author\": \"${{ github.actor }}\"
          }" > build/build-info.json

  deploy-preview:
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      
      - name: Deploy to Preview
        run: echo "Deploy preview version"
        # Add your preview deployment steps here

  deploy-production:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://your-production-url.com
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      
      - name: Deploy to Production
        run: echo "Deploy production version"
        # Add your production deployment steps here